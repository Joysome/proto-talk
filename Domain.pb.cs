// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: domain.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Domain.Protobuf {

  /// <summary>Holder for reflection information generated from domain.proto</summary>
  public static partial class DomainReflection {

    #region Descriptor
    /// <summary>File descriptor for domain.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DomainReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgxkb21haW4ucHJvdG8SD0RvbWFpbi5Qcm90b2J1ZiIOCgxPdXRjb21lRW1w",
            "dHkiHgoNT3V0Y29tZVByaWNlZBINCgVQcmljZRgBIAEoAyI0ChVPdXRjb21l",
            "UHJpY2VkV2l0aFByb2ISDQoFUHJpY2UYASABKAMSDAoEUHJvYhgCIAEoAiJB",
            "Cg9PdXRjb21lUmVzdWx0ZWQSLgoGUmVzdWx0GAEgASgOMh4uRG9tYWluLlBy",
            "b3RvYnVmLk91dGNvbWVSZXN1bHQi4gUKCldpbm5lcjNXYXkSMgoJV2luMUVt",
            "cHR5GAEgASgLMh0uRG9tYWluLlByb3RvYnVmLk91dGNvbWVFbXB0eUgAEjQK",
            "CldpbjFQcmljZWQYAiABKAsyHi5Eb21haW4uUHJvdG9idWYuT3V0Y29tZVBy",
            "aWNlZEgAEkQKEldpbjFQcmljZWRXaXRoUHJvYhgDIAEoCzImLkRvbWFpbi5Q",
            "cm90b2J1Zi5PdXRjb21lUHJpY2VkV2l0aFByb2JIABI4CgxXaW4xUmVzdWx0",
            "ZWQYBCABKAsyIC5Eb21haW4uUHJvdG9idWYuT3V0Y29tZVJlc3VsdGVkSAAS",
            "MgoJRHJhd0VtcHR5GBYgASgLMh0uRG9tYWluLlByb3RvYnVmLk91dGNvbWVF",
            "bXB0eUgBEjQKCkRyYXdQcmljZWQYFyABKAsyHi5Eb21haW4uUHJvdG9idWYu",
            "T3V0Y29tZVByaWNlZEgBEkQKEkRyYXdQcmljZWRXaXRoUHJvYhgYIAEoCzIm",
            "LkRvbWFpbi5Qcm90b2J1Zi5PdXRjb21lUHJpY2VkV2l0aFByb2JIARI4CgxE",
            "cmF3UmVzdWx0ZWQYGSABKAsyIC5Eb21haW4uUHJvdG9idWYuT3V0Y29tZVJl",
            "c3VsdGVkSAESMgoJV2luMkVtcHR5GCsgASgLMh0uRG9tYWluLlByb3RvYnVm",
            "Lk91dGNvbWVFbXB0eUgCEjQKCldpbjJQcmljZWQYLCABKAsyHi5Eb21haW4u",
            "UHJvdG9idWYuT3V0Y29tZVByaWNlZEgCEkQKEldpbjJQcmljZWRXaXRoUHJv",
            "YhgtIAEoCzImLkRvbWFpbi5Qcm90b2J1Zi5PdXRjb21lUHJpY2VkV2l0aFBy",
            "b2JIAhI4CgxXaW4yUmVzdWx0ZWQYLiABKAsyIC5Eb21haW4uUHJvdG9idWYu",
            "T3V0Y29tZVJlc3VsdGVkSAJCBgoEV2luMUIGCgREcmF3QgYKBFdpbjIqRwoN",
            "T3V0Y29tZVJlc3VsdBILCgdVbmtub3duEAASBwoDV2luEAESCAoETG9zZRAC",
            "EggKBFZvaWQQAxIMCghDYW5jZWxlZBAEYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Domain.Protobuf.OutcomeResult), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Domain.Protobuf.OutcomeEmpty), global::Domain.Protobuf.OutcomeEmpty.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Domain.Protobuf.OutcomePriced), global::Domain.Protobuf.OutcomePriced.Parser, new[]{ "Price" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Domain.Protobuf.OutcomePricedWithProb), global::Domain.Protobuf.OutcomePricedWithProb.Parser, new[]{ "Price", "Prob" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Domain.Protobuf.OutcomeResulted), global::Domain.Protobuf.OutcomeResulted.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Domain.Protobuf.Winner3Way), global::Domain.Protobuf.Winner3Way.Parser, new[]{ "Win1Empty", "Win1Priced", "Win1PricedWithProb", "Win1Resulted", "DrawEmpty", "DrawPriced", "DrawPricedWithProb", "DrawResulted", "Win2Empty", "Win2Priced", "Win2PricedWithProb", "Win2Resulted" }, new[]{ "Win1", "Draw", "Win2" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum OutcomeResult {
    [pbr::OriginalName("Unknown")] Unknown = 0,
    [pbr::OriginalName("Win")] Win = 1,
    [pbr::OriginalName("Lose")] Lose = 2,
    [pbr::OriginalName("Void")] Void = 3,
    [pbr::OriginalName("Canceled")] Canceled = 4,
  }

  #endregion

  #region Messages
  public sealed partial class OutcomeEmpty : pb::IMessage<OutcomeEmpty>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OutcomeEmpty> _parser = new pb::MessageParser<OutcomeEmpty>(() => new OutcomeEmpty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OutcomeEmpty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Domain.Protobuf.DomainReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutcomeEmpty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutcomeEmpty(OutcomeEmpty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutcomeEmpty Clone() {
      return new OutcomeEmpty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OutcomeEmpty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OutcomeEmpty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OutcomeEmpty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class OutcomePriced : pb::IMessage<OutcomePriced>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OutcomePriced> _parser = new pb::MessageParser<OutcomePriced>(() => new OutcomePriced());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OutcomePriced> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Domain.Protobuf.DomainReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutcomePriced() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutcomePriced(OutcomePriced other) : this() {
      price_ = other.price_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutcomePriced Clone() {
      return new OutcomePriced(this);
    }

    /// <summary>Field number for the "Price" field.</summary>
    public const int PriceFieldNumber = 1;
    private long price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OutcomePriced);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OutcomePriced other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Price != other.Price) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Price != 0L) hash ^= Price.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Price != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Price);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Price != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Price);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Price != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Price);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OutcomePriced other) {
      if (other == null) {
        return;
      }
      if (other.Price != 0L) {
        Price = other.Price;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Price = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Price = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OutcomePricedWithProb : pb::IMessage<OutcomePricedWithProb>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OutcomePricedWithProb> _parser = new pb::MessageParser<OutcomePricedWithProb>(() => new OutcomePricedWithProb());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OutcomePricedWithProb> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Domain.Protobuf.DomainReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutcomePricedWithProb() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutcomePricedWithProb(OutcomePricedWithProb other) : this() {
      price_ = other.price_;
      prob_ = other.prob_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutcomePricedWithProb Clone() {
      return new OutcomePricedWithProb(this);
    }

    /// <summary>Field number for the "Price" field.</summary>
    public const int PriceFieldNumber = 1;
    private long price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "Prob" field.</summary>
    public const int ProbFieldNumber = 2;
    private float prob_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Prob {
      get { return prob_; }
      set {
        prob_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OutcomePricedWithProb);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OutcomePricedWithProb other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Price != other.Price) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Prob, other.Prob)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Price != 0L) hash ^= Price.GetHashCode();
      if (Prob != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Prob);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Price != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Price);
      }
      if (Prob != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Prob);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Price != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Price);
      }
      if (Prob != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Prob);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Price != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Price);
      }
      if (Prob != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OutcomePricedWithProb other) {
      if (other == null) {
        return;
      }
      if (other.Price != 0L) {
        Price = other.Price;
      }
      if (other.Prob != 0F) {
        Prob = other.Prob;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Price = input.ReadInt64();
            break;
          }
          case 21: {
            Prob = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Price = input.ReadInt64();
            break;
          }
          case 21: {
            Prob = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OutcomeResulted : pb::IMessage<OutcomeResulted>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OutcomeResulted> _parser = new pb::MessageParser<OutcomeResulted>(() => new OutcomeResulted());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OutcomeResulted> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Domain.Protobuf.DomainReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutcomeResulted() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutcomeResulted(OutcomeResulted other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutcomeResulted Clone() {
      return new OutcomeResulted(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Domain.Protobuf.OutcomeResult result_ = global::Domain.Protobuf.OutcomeResult.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Domain.Protobuf.OutcomeResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OutcomeResulted);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OutcomeResulted other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != global::Domain.Protobuf.OutcomeResult.Unknown) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Result != global::Domain.Protobuf.OutcomeResult.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Result != global::Domain.Protobuf.OutcomeResult.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != global::Domain.Protobuf.OutcomeResult.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OutcomeResulted other) {
      if (other == null) {
        return;
      }
      if (other.Result != global::Domain.Protobuf.OutcomeResult.Unknown) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Domain.Protobuf.OutcomeResult) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Domain.Protobuf.OutcomeResult) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Winner3Way : pb::IMessage<Winner3Way>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Winner3Way> _parser = new pb::MessageParser<Winner3Way>(() => new Winner3Way());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Winner3Way> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Domain.Protobuf.DomainReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Winner3Way() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Winner3Way(Winner3Way other) : this() {
      switch (other.Win1Case) {
        case Win1OneofCase.Win1Empty:
          Win1Empty = other.Win1Empty.Clone();
          break;
        case Win1OneofCase.Win1Priced:
          Win1Priced = other.Win1Priced.Clone();
          break;
        case Win1OneofCase.Win1PricedWithProb:
          Win1PricedWithProb = other.Win1PricedWithProb.Clone();
          break;
        case Win1OneofCase.Win1Resulted:
          Win1Resulted = other.Win1Resulted.Clone();
          break;
      }

      switch (other.DrawCase) {
        case DrawOneofCase.DrawEmpty:
          DrawEmpty = other.DrawEmpty.Clone();
          break;
        case DrawOneofCase.DrawPriced:
          DrawPriced = other.DrawPriced.Clone();
          break;
        case DrawOneofCase.DrawPricedWithProb:
          DrawPricedWithProb = other.DrawPricedWithProb.Clone();
          break;
        case DrawOneofCase.DrawResulted:
          DrawResulted = other.DrawResulted.Clone();
          break;
      }

      switch (other.Win2Case) {
        case Win2OneofCase.Win2Empty:
          Win2Empty = other.Win2Empty.Clone();
          break;
        case Win2OneofCase.Win2Priced:
          Win2Priced = other.Win2Priced.Clone();
          break;
        case Win2OneofCase.Win2PricedWithProb:
          Win2PricedWithProb = other.Win2PricedWithProb.Clone();
          break;
        case Win2OneofCase.Win2Resulted:
          Win2Resulted = other.Win2Resulted.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Winner3Way Clone() {
      return new Winner3Way(this);
    }

    /// <summary>Field number for the "Win1Empty" field.</summary>
    public const int Win1EmptyFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Domain.Protobuf.OutcomeEmpty Win1Empty {
      get { return win1Case_ == Win1OneofCase.Win1Empty ? (global::Domain.Protobuf.OutcomeEmpty) win1_ : null; }
      set {
        win1_ = value;
        win1Case_ = value == null ? Win1OneofCase.None : Win1OneofCase.Win1Empty;
      }
    }

    /// <summary>Field number for the "Win1Priced" field.</summary>
    public const int Win1PricedFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Domain.Protobuf.OutcomePriced Win1Priced {
      get { return win1Case_ == Win1OneofCase.Win1Priced ? (global::Domain.Protobuf.OutcomePriced) win1_ : null; }
      set {
        win1_ = value;
        win1Case_ = value == null ? Win1OneofCase.None : Win1OneofCase.Win1Priced;
      }
    }

    /// <summary>Field number for the "Win1PricedWithProb" field.</summary>
    public const int Win1PricedWithProbFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Domain.Protobuf.OutcomePricedWithProb Win1PricedWithProb {
      get { return win1Case_ == Win1OneofCase.Win1PricedWithProb ? (global::Domain.Protobuf.OutcomePricedWithProb) win1_ : null; }
      set {
        win1_ = value;
        win1Case_ = value == null ? Win1OneofCase.None : Win1OneofCase.Win1PricedWithProb;
      }
    }

    /// <summary>Field number for the "Win1Resulted" field.</summary>
    public const int Win1ResultedFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Domain.Protobuf.OutcomeResulted Win1Resulted {
      get { return win1Case_ == Win1OneofCase.Win1Resulted ? (global::Domain.Protobuf.OutcomeResulted) win1_ : null; }
      set {
        win1_ = value;
        win1Case_ = value == null ? Win1OneofCase.None : Win1OneofCase.Win1Resulted;
      }
    }

    /// <summary>Field number for the "DrawEmpty" field.</summary>
    public const int DrawEmptyFieldNumber = 22;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Domain.Protobuf.OutcomeEmpty DrawEmpty {
      get { return drawCase_ == DrawOneofCase.DrawEmpty ? (global::Domain.Protobuf.OutcomeEmpty) draw_ : null; }
      set {
        draw_ = value;
        drawCase_ = value == null ? DrawOneofCase.None : DrawOneofCase.DrawEmpty;
      }
    }

    /// <summary>Field number for the "DrawPriced" field.</summary>
    public const int DrawPricedFieldNumber = 23;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Domain.Protobuf.OutcomePriced DrawPriced {
      get { return drawCase_ == DrawOneofCase.DrawPriced ? (global::Domain.Protobuf.OutcomePriced) draw_ : null; }
      set {
        draw_ = value;
        drawCase_ = value == null ? DrawOneofCase.None : DrawOneofCase.DrawPriced;
      }
    }

    /// <summary>Field number for the "DrawPricedWithProb" field.</summary>
    public const int DrawPricedWithProbFieldNumber = 24;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Domain.Protobuf.OutcomePricedWithProb DrawPricedWithProb {
      get { return drawCase_ == DrawOneofCase.DrawPricedWithProb ? (global::Domain.Protobuf.OutcomePricedWithProb) draw_ : null; }
      set {
        draw_ = value;
        drawCase_ = value == null ? DrawOneofCase.None : DrawOneofCase.DrawPricedWithProb;
      }
    }

    /// <summary>Field number for the "DrawResulted" field.</summary>
    public const int DrawResultedFieldNumber = 25;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Domain.Protobuf.OutcomeResulted DrawResulted {
      get { return drawCase_ == DrawOneofCase.DrawResulted ? (global::Domain.Protobuf.OutcomeResulted) draw_ : null; }
      set {
        draw_ = value;
        drawCase_ = value == null ? DrawOneofCase.None : DrawOneofCase.DrawResulted;
      }
    }

    /// <summary>Field number for the "Win2Empty" field.</summary>
    public const int Win2EmptyFieldNumber = 43;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Domain.Protobuf.OutcomeEmpty Win2Empty {
      get { return win2Case_ == Win2OneofCase.Win2Empty ? (global::Domain.Protobuf.OutcomeEmpty) win2_ : null; }
      set {
        win2_ = value;
        win2Case_ = value == null ? Win2OneofCase.None : Win2OneofCase.Win2Empty;
      }
    }

    /// <summary>Field number for the "Win2Priced" field.</summary>
    public const int Win2PricedFieldNumber = 44;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Domain.Protobuf.OutcomePriced Win2Priced {
      get { return win2Case_ == Win2OneofCase.Win2Priced ? (global::Domain.Protobuf.OutcomePriced) win2_ : null; }
      set {
        win2_ = value;
        win2Case_ = value == null ? Win2OneofCase.None : Win2OneofCase.Win2Priced;
      }
    }

    /// <summary>Field number for the "Win2PricedWithProb" field.</summary>
    public const int Win2PricedWithProbFieldNumber = 45;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Domain.Protobuf.OutcomePricedWithProb Win2PricedWithProb {
      get { return win2Case_ == Win2OneofCase.Win2PricedWithProb ? (global::Domain.Protobuf.OutcomePricedWithProb) win2_ : null; }
      set {
        win2_ = value;
        win2Case_ = value == null ? Win2OneofCase.None : Win2OneofCase.Win2PricedWithProb;
      }
    }

    /// <summary>Field number for the "Win2Resulted" field.</summary>
    public const int Win2ResultedFieldNumber = 46;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Domain.Protobuf.OutcomeResulted Win2Resulted {
      get { return win2Case_ == Win2OneofCase.Win2Resulted ? (global::Domain.Protobuf.OutcomeResulted) win2_ : null; }
      set {
        win2_ = value;
        win2Case_ = value == null ? Win2OneofCase.None : Win2OneofCase.Win2Resulted;
      }
    }

    private object win1_;
    /// <summary>Enum of possible cases for the "Win1" oneof.</summary>
    public enum Win1OneofCase {
      None = 0,
      Win1Empty = 1,
      Win1Priced = 2,
      Win1PricedWithProb = 3,
      Win1Resulted = 4,
    }
    private Win1OneofCase win1Case_ = Win1OneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Win1OneofCase Win1Case {
      get { return win1Case_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearWin1() {
      win1Case_ = Win1OneofCase.None;
      win1_ = null;
    }

    private object draw_;
    /// <summary>Enum of possible cases for the "Draw" oneof.</summary>
    public enum DrawOneofCase {
      None = 0,
      DrawEmpty = 22,
      DrawPriced = 23,
      DrawPricedWithProb = 24,
      DrawResulted = 25,
    }
    private DrawOneofCase drawCase_ = DrawOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrawOneofCase DrawCase {
      get { return drawCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDraw() {
      drawCase_ = DrawOneofCase.None;
      draw_ = null;
    }

    private object win2_;
    /// <summary>Enum of possible cases for the "Win2" oneof.</summary>
    public enum Win2OneofCase {
      None = 0,
      Win2Empty = 43,
      Win2Priced = 44,
      Win2PricedWithProb = 45,
      Win2Resulted = 46,
    }
    private Win2OneofCase win2Case_ = Win2OneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Win2OneofCase Win2Case {
      get { return win2Case_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearWin2() {
      win2Case_ = Win2OneofCase.None;
      win2_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Winner3Way);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Winner3Way other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Win1Empty, other.Win1Empty)) return false;
      if (!object.Equals(Win1Priced, other.Win1Priced)) return false;
      if (!object.Equals(Win1PricedWithProb, other.Win1PricedWithProb)) return false;
      if (!object.Equals(Win1Resulted, other.Win1Resulted)) return false;
      if (!object.Equals(DrawEmpty, other.DrawEmpty)) return false;
      if (!object.Equals(DrawPriced, other.DrawPriced)) return false;
      if (!object.Equals(DrawPricedWithProb, other.DrawPricedWithProb)) return false;
      if (!object.Equals(DrawResulted, other.DrawResulted)) return false;
      if (!object.Equals(Win2Empty, other.Win2Empty)) return false;
      if (!object.Equals(Win2Priced, other.Win2Priced)) return false;
      if (!object.Equals(Win2PricedWithProb, other.Win2PricedWithProb)) return false;
      if (!object.Equals(Win2Resulted, other.Win2Resulted)) return false;
      if (Win1Case != other.Win1Case) return false;
      if (DrawCase != other.DrawCase) return false;
      if (Win2Case != other.Win2Case) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (win1Case_ == Win1OneofCase.Win1Empty) hash ^= Win1Empty.GetHashCode();
      if (win1Case_ == Win1OneofCase.Win1Priced) hash ^= Win1Priced.GetHashCode();
      if (win1Case_ == Win1OneofCase.Win1PricedWithProb) hash ^= Win1PricedWithProb.GetHashCode();
      if (win1Case_ == Win1OneofCase.Win1Resulted) hash ^= Win1Resulted.GetHashCode();
      if (drawCase_ == DrawOneofCase.DrawEmpty) hash ^= DrawEmpty.GetHashCode();
      if (drawCase_ == DrawOneofCase.DrawPriced) hash ^= DrawPriced.GetHashCode();
      if (drawCase_ == DrawOneofCase.DrawPricedWithProb) hash ^= DrawPricedWithProb.GetHashCode();
      if (drawCase_ == DrawOneofCase.DrawResulted) hash ^= DrawResulted.GetHashCode();
      if (win2Case_ == Win2OneofCase.Win2Empty) hash ^= Win2Empty.GetHashCode();
      if (win2Case_ == Win2OneofCase.Win2Priced) hash ^= Win2Priced.GetHashCode();
      if (win2Case_ == Win2OneofCase.Win2PricedWithProb) hash ^= Win2PricedWithProb.GetHashCode();
      if (win2Case_ == Win2OneofCase.Win2Resulted) hash ^= Win2Resulted.GetHashCode();
      hash ^= (int) win1Case_;
      hash ^= (int) drawCase_;
      hash ^= (int) win2Case_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (win1Case_ == Win1OneofCase.Win1Empty) {
        output.WriteRawTag(10);
        output.WriteMessage(Win1Empty);
      }
      if (win1Case_ == Win1OneofCase.Win1Priced) {
        output.WriteRawTag(18);
        output.WriteMessage(Win1Priced);
      }
      if (win1Case_ == Win1OneofCase.Win1PricedWithProb) {
        output.WriteRawTag(26);
        output.WriteMessage(Win1PricedWithProb);
      }
      if (win1Case_ == Win1OneofCase.Win1Resulted) {
        output.WriteRawTag(34);
        output.WriteMessage(Win1Resulted);
      }
      if (drawCase_ == DrawOneofCase.DrawEmpty) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(DrawEmpty);
      }
      if (drawCase_ == DrawOneofCase.DrawPriced) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(DrawPriced);
      }
      if (drawCase_ == DrawOneofCase.DrawPricedWithProb) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(DrawPricedWithProb);
      }
      if (drawCase_ == DrawOneofCase.DrawResulted) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(DrawResulted);
      }
      if (win2Case_ == Win2OneofCase.Win2Empty) {
        output.WriteRawTag(218, 2);
        output.WriteMessage(Win2Empty);
      }
      if (win2Case_ == Win2OneofCase.Win2Priced) {
        output.WriteRawTag(226, 2);
        output.WriteMessage(Win2Priced);
      }
      if (win2Case_ == Win2OneofCase.Win2PricedWithProb) {
        output.WriteRawTag(234, 2);
        output.WriteMessage(Win2PricedWithProb);
      }
      if (win2Case_ == Win2OneofCase.Win2Resulted) {
        output.WriteRawTag(242, 2);
        output.WriteMessage(Win2Resulted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (win1Case_ == Win1OneofCase.Win1Empty) {
        output.WriteRawTag(10);
        output.WriteMessage(Win1Empty);
      }
      if (win1Case_ == Win1OneofCase.Win1Priced) {
        output.WriteRawTag(18);
        output.WriteMessage(Win1Priced);
      }
      if (win1Case_ == Win1OneofCase.Win1PricedWithProb) {
        output.WriteRawTag(26);
        output.WriteMessage(Win1PricedWithProb);
      }
      if (win1Case_ == Win1OneofCase.Win1Resulted) {
        output.WriteRawTag(34);
        output.WriteMessage(Win1Resulted);
      }
      if (drawCase_ == DrawOneofCase.DrawEmpty) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(DrawEmpty);
      }
      if (drawCase_ == DrawOneofCase.DrawPriced) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(DrawPriced);
      }
      if (drawCase_ == DrawOneofCase.DrawPricedWithProb) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(DrawPricedWithProb);
      }
      if (drawCase_ == DrawOneofCase.DrawResulted) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(DrawResulted);
      }
      if (win2Case_ == Win2OneofCase.Win2Empty) {
        output.WriteRawTag(218, 2);
        output.WriteMessage(Win2Empty);
      }
      if (win2Case_ == Win2OneofCase.Win2Priced) {
        output.WriteRawTag(226, 2);
        output.WriteMessage(Win2Priced);
      }
      if (win2Case_ == Win2OneofCase.Win2PricedWithProb) {
        output.WriteRawTag(234, 2);
        output.WriteMessage(Win2PricedWithProb);
      }
      if (win2Case_ == Win2OneofCase.Win2Resulted) {
        output.WriteRawTag(242, 2);
        output.WriteMessage(Win2Resulted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (win1Case_ == Win1OneofCase.Win1Empty) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Win1Empty);
      }
      if (win1Case_ == Win1OneofCase.Win1Priced) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Win1Priced);
      }
      if (win1Case_ == Win1OneofCase.Win1PricedWithProb) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Win1PricedWithProb);
      }
      if (win1Case_ == Win1OneofCase.Win1Resulted) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Win1Resulted);
      }
      if (drawCase_ == DrawOneofCase.DrawEmpty) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DrawEmpty);
      }
      if (drawCase_ == DrawOneofCase.DrawPriced) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DrawPriced);
      }
      if (drawCase_ == DrawOneofCase.DrawPricedWithProb) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DrawPricedWithProb);
      }
      if (drawCase_ == DrawOneofCase.DrawResulted) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DrawResulted);
      }
      if (win2Case_ == Win2OneofCase.Win2Empty) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Win2Empty);
      }
      if (win2Case_ == Win2OneofCase.Win2Priced) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Win2Priced);
      }
      if (win2Case_ == Win2OneofCase.Win2PricedWithProb) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Win2PricedWithProb);
      }
      if (win2Case_ == Win2OneofCase.Win2Resulted) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Win2Resulted);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Winner3Way other) {
      if (other == null) {
        return;
      }
      switch (other.Win1Case) {
        case Win1OneofCase.Win1Empty:
          if (Win1Empty == null) {
            Win1Empty = new global::Domain.Protobuf.OutcomeEmpty();
          }
          Win1Empty.MergeFrom(other.Win1Empty);
          break;
        case Win1OneofCase.Win1Priced:
          if (Win1Priced == null) {
            Win1Priced = new global::Domain.Protobuf.OutcomePriced();
          }
          Win1Priced.MergeFrom(other.Win1Priced);
          break;
        case Win1OneofCase.Win1PricedWithProb:
          if (Win1PricedWithProb == null) {
            Win1PricedWithProb = new global::Domain.Protobuf.OutcomePricedWithProb();
          }
          Win1PricedWithProb.MergeFrom(other.Win1PricedWithProb);
          break;
        case Win1OneofCase.Win1Resulted:
          if (Win1Resulted == null) {
            Win1Resulted = new global::Domain.Protobuf.OutcomeResulted();
          }
          Win1Resulted.MergeFrom(other.Win1Resulted);
          break;
      }

      switch (other.DrawCase) {
        case DrawOneofCase.DrawEmpty:
          if (DrawEmpty == null) {
            DrawEmpty = new global::Domain.Protobuf.OutcomeEmpty();
          }
          DrawEmpty.MergeFrom(other.DrawEmpty);
          break;
        case DrawOneofCase.DrawPriced:
          if (DrawPriced == null) {
            DrawPriced = new global::Domain.Protobuf.OutcomePriced();
          }
          DrawPriced.MergeFrom(other.DrawPriced);
          break;
        case DrawOneofCase.DrawPricedWithProb:
          if (DrawPricedWithProb == null) {
            DrawPricedWithProb = new global::Domain.Protobuf.OutcomePricedWithProb();
          }
          DrawPricedWithProb.MergeFrom(other.DrawPricedWithProb);
          break;
        case DrawOneofCase.DrawResulted:
          if (DrawResulted == null) {
            DrawResulted = new global::Domain.Protobuf.OutcomeResulted();
          }
          DrawResulted.MergeFrom(other.DrawResulted);
          break;
      }

      switch (other.Win2Case) {
        case Win2OneofCase.Win2Empty:
          if (Win2Empty == null) {
            Win2Empty = new global::Domain.Protobuf.OutcomeEmpty();
          }
          Win2Empty.MergeFrom(other.Win2Empty);
          break;
        case Win2OneofCase.Win2Priced:
          if (Win2Priced == null) {
            Win2Priced = new global::Domain.Protobuf.OutcomePriced();
          }
          Win2Priced.MergeFrom(other.Win2Priced);
          break;
        case Win2OneofCase.Win2PricedWithProb:
          if (Win2PricedWithProb == null) {
            Win2PricedWithProb = new global::Domain.Protobuf.OutcomePricedWithProb();
          }
          Win2PricedWithProb.MergeFrom(other.Win2PricedWithProb);
          break;
        case Win2OneofCase.Win2Resulted:
          if (Win2Resulted == null) {
            Win2Resulted = new global::Domain.Protobuf.OutcomeResulted();
          }
          Win2Resulted.MergeFrom(other.Win2Resulted);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Domain.Protobuf.OutcomeEmpty subBuilder = new global::Domain.Protobuf.OutcomeEmpty();
            if (win1Case_ == Win1OneofCase.Win1Empty) {
              subBuilder.MergeFrom(Win1Empty);
            }
            input.ReadMessage(subBuilder);
            Win1Empty = subBuilder;
            break;
          }
          case 18: {
            global::Domain.Protobuf.OutcomePriced subBuilder = new global::Domain.Protobuf.OutcomePriced();
            if (win1Case_ == Win1OneofCase.Win1Priced) {
              subBuilder.MergeFrom(Win1Priced);
            }
            input.ReadMessage(subBuilder);
            Win1Priced = subBuilder;
            break;
          }
          case 26: {
            global::Domain.Protobuf.OutcomePricedWithProb subBuilder = new global::Domain.Protobuf.OutcomePricedWithProb();
            if (win1Case_ == Win1OneofCase.Win1PricedWithProb) {
              subBuilder.MergeFrom(Win1PricedWithProb);
            }
            input.ReadMessage(subBuilder);
            Win1PricedWithProb = subBuilder;
            break;
          }
          case 34: {
            global::Domain.Protobuf.OutcomeResulted subBuilder = new global::Domain.Protobuf.OutcomeResulted();
            if (win1Case_ == Win1OneofCase.Win1Resulted) {
              subBuilder.MergeFrom(Win1Resulted);
            }
            input.ReadMessage(subBuilder);
            Win1Resulted = subBuilder;
            break;
          }
          case 178: {
            global::Domain.Protobuf.OutcomeEmpty subBuilder = new global::Domain.Protobuf.OutcomeEmpty();
            if (drawCase_ == DrawOneofCase.DrawEmpty) {
              subBuilder.MergeFrom(DrawEmpty);
            }
            input.ReadMessage(subBuilder);
            DrawEmpty = subBuilder;
            break;
          }
          case 186: {
            global::Domain.Protobuf.OutcomePriced subBuilder = new global::Domain.Protobuf.OutcomePriced();
            if (drawCase_ == DrawOneofCase.DrawPriced) {
              subBuilder.MergeFrom(DrawPriced);
            }
            input.ReadMessage(subBuilder);
            DrawPriced = subBuilder;
            break;
          }
          case 194: {
            global::Domain.Protobuf.OutcomePricedWithProb subBuilder = new global::Domain.Protobuf.OutcomePricedWithProb();
            if (drawCase_ == DrawOneofCase.DrawPricedWithProb) {
              subBuilder.MergeFrom(DrawPricedWithProb);
            }
            input.ReadMessage(subBuilder);
            DrawPricedWithProb = subBuilder;
            break;
          }
          case 202: {
            global::Domain.Protobuf.OutcomeResulted subBuilder = new global::Domain.Protobuf.OutcomeResulted();
            if (drawCase_ == DrawOneofCase.DrawResulted) {
              subBuilder.MergeFrom(DrawResulted);
            }
            input.ReadMessage(subBuilder);
            DrawResulted = subBuilder;
            break;
          }
          case 346: {
            global::Domain.Protobuf.OutcomeEmpty subBuilder = new global::Domain.Protobuf.OutcomeEmpty();
            if (win2Case_ == Win2OneofCase.Win2Empty) {
              subBuilder.MergeFrom(Win2Empty);
            }
            input.ReadMessage(subBuilder);
            Win2Empty = subBuilder;
            break;
          }
          case 354: {
            global::Domain.Protobuf.OutcomePriced subBuilder = new global::Domain.Protobuf.OutcomePriced();
            if (win2Case_ == Win2OneofCase.Win2Priced) {
              subBuilder.MergeFrom(Win2Priced);
            }
            input.ReadMessage(subBuilder);
            Win2Priced = subBuilder;
            break;
          }
          case 362: {
            global::Domain.Protobuf.OutcomePricedWithProb subBuilder = new global::Domain.Protobuf.OutcomePricedWithProb();
            if (win2Case_ == Win2OneofCase.Win2PricedWithProb) {
              subBuilder.MergeFrom(Win2PricedWithProb);
            }
            input.ReadMessage(subBuilder);
            Win2PricedWithProb = subBuilder;
            break;
          }
          case 370: {
            global::Domain.Protobuf.OutcomeResulted subBuilder = new global::Domain.Protobuf.OutcomeResulted();
            if (win2Case_ == Win2OneofCase.Win2Resulted) {
              subBuilder.MergeFrom(Win2Resulted);
            }
            input.ReadMessage(subBuilder);
            Win2Resulted = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Domain.Protobuf.OutcomeEmpty subBuilder = new global::Domain.Protobuf.OutcomeEmpty();
            if (win1Case_ == Win1OneofCase.Win1Empty) {
              subBuilder.MergeFrom(Win1Empty);
            }
            input.ReadMessage(subBuilder);
            Win1Empty = subBuilder;
            break;
          }
          case 18: {
            global::Domain.Protobuf.OutcomePriced subBuilder = new global::Domain.Protobuf.OutcomePriced();
            if (win1Case_ == Win1OneofCase.Win1Priced) {
              subBuilder.MergeFrom(Win1Priced);
            }
            input.ReadMessage(subBuilder);
            Win1Priced = subBuilder;
            break;
          }
          case 26: {
            global::Domain.Protobuf.OutcomePricedWithProb subBuilder = new global::Domain.Protobuf.OutcomePricedWithProb();
            if (win1Case_ == Win1OneofCase.Win1PricedWithProb) {
              subBuilder.MergeFrom(Win1PricedWithProb);
            }
            input.ReadMessage(subBuilder);
            Win1PricedWithProb = subBuilder;
            break;
          }
          case 34: {
            global::Domain.Protobuf.OutcomeResulted subBuilder = new global::Domain.Protobuf.OutcomeResulted();
            if (win1Case_ == Win1OneofCase.Win1Resulted) {
              subBuilder.MergeFrom(Win1Resulted);
            }
            input.ReadMessage(subBuilder);
            Win1Resulted = subBuilder;
            break;
          }
          case 178: {
            global::Domain.Protobuf.OutcomeEmpty subBuilder = new global::Domain.Protobuf.OutcomeEmpty();
            if (drawCase_ == DrawOneofCase.DrawEmpty) {
              subBuilder.MergeFrom(DrawEmpty);
            }
            input.ReadMessage(subBuilder);
            DrawEmpty = subBuilder;
            break;
          }
          case 186: {
            global::Domain.Protobuf.OutcomePriced subBuilder = new global::Domain.Protobuf.OutcomePriced();
            if (drawCase_ == DrawOneofCase.DrawPriced) {
              subBuilder.MergeFrom(DrawPriced);
            }
            input.ReadMessage(subBuilder);
            DrawPriced = subBuilder;
            break;
          }
          case 194: {
            global::Domain.Protobuf.OutcomePricedWithProb subBuilder = new global::Domain.Protobuf.OutcomePricedWithProb();
            if (drawCase_ == DrawOneofCase.DrawPricedWithProb) {
              subBuilder.MergeFrom(DrawPricedWithProb);
            }
            input.ReadMessage(subBuilder);
            DrawPricedWithProb = subBuilder;
            break;
          }
          case 202: {
            global::Domain.Protobuf.OutcomeResulted subBuilder = new global::Domain.Protobuf.OutcomeResulted();
            if (drawCase_ == DrawOneofCase.DrawResulted) {
              subBuilder.MergeFrom(DrawResulted);
            }
            input.ReadMessage(subBuilder);
            DrawResulted = subBuilder;
            break;
          }
          case 346: {
            global::Domain.Protobuf.OutcomeEmpty subBuilder = new global::Domain.Protobuf.OutcomeEmpty();
            if (win2Case_ == Win2OneofCase.Win2Empty) {
              subBuilder.MergeFrom(Win2Empty);
            }
            input.ReadMessage(subBuilder);
            Win2Empty = subBuilder;
            break;
          }
          case 354: {
            global::Domain.Protobuf.OutcomePriced subBuilder = new global::Domain.Protobuf.OutcomePriced();
            if (win2Case_ == Win2OneofCase.Win2Priced) {
              subBuilder.MergeFrom(Win2Priced);
            }
            input.ReadMessage(subBuilder);
            Win2Priced = subBuilder;
            break;
          }
          case 362: {
            global::Domain.Protobuf.OutcomePricedWithProb subBuilder = new global::Domain.Protobuf.OutcomePricedWithProb();
            if (win2Case_ == Win2OneofCase.Win2PricedWithProb) {
              subBuilder.MergeFrom(Win2PricedWithProb);
            }
            input.ReadMessage(subBuilder);
            Win2PricedWithProb = subBuilder;
            break;
          }
          case 370: {
            global::Domain.Protobuf.OutcomeResulted subBuilder = new global::Domain.Protobuf.OutcomeResulted();
            if (win2Case_ == Win2OneofCase.Win2Resulted) {
              subBuilder.MergeFrom(Win2Resulted);
            }
            input.ReadMessage(subBuilder);
            Win2Resulted = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
